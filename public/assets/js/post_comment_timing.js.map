{"version":3,"file":"post_comment_timing.js","names":["PostCommentTime","constructor","timestamp","this","getTimeAgo","now","Date","created","timeDiff","seconds","Math","floor","minutes","hours","days","toDateString"],"sources":["js/post_comment_timing.js"],"mappings":"AAAA,MAAMA,gBAEF,WAAAC,CAAYC,GACRC,KAAKC,WAAWF,EACpB,CACA,UAAAE,CAAWF,GACP,MAAMG,EAAM,IAAIC,KACVC,EAAU,IAAID,KAAKJ,GACnBM,EAAWH,EAAME,EACjBE,EAAUC,KAAKC,MAAMH,EAAW,KAChCI,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAEhC,OAAIC,EAAO,EACFP,EAAQQ,eACG,IAATD,EACF,YACED,GAAS,EACD,IAAVA,EAAc,aAAe,GAAGA,cAC9BD,GAAW,EACD,IAAZA,EAAgB,eAAiB,GAAGA,gBAEpC,UAEb","ignoreList":[],"sourcesContent":["class PostCommentTime{\r\n\r\n    constructor(timestamp){\r\n        this.getTimeAgo(timestamp);\r\n    }\r\n    getTimeAgo(timestamp){\r\n        const now = new Date();\r\n        const created = new Date(timestamp);\r\n        const timeDiff = now - created;\r\n        const seconds = Math.floor(timeDiff / 1000);\r\n        const minutes = Math.floor(seconds / 60);\r\n        const hours = Math.floor(minutes / 60);\r\n        const days = Math.floor(hours / 24);\r\n      \r\n        if (days > 1) {\r\n          return created.toDateString(); // Return the actual date if more than a day has passed\r\n        } else if (days === 1) {\r\n          return 'Yesterday';\r\n        } else if (hours >= 1) {\r\n          return hours === 1 ? '1 hour ago' : `${hours} hours ago`;\r\n        } else if (minutes >= 1) {\r\n          return minutes === 1 ? '1 minute ago' : `${minutes} minutes ago`;\r\n        } else {\r\n          return 'Just now';\r\n        }\r\n    }\r\n}\r\n"]}