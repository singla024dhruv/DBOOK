{"version":3,"file":"home_post_comments.js","names":["PostComments","constructor","postId","this","postContainer","$","newCommentForm","createComment","self","each","deleteComment","pSelf","submit","e","preventDefault","ajax","type","url","data","serialize","success","newComment","newCommentDom","comment","prepend","ToggleLike","Noty","theme","text","layout","timeout","show","error","console","log","responseText","_id","likes","length","content","user","name","deleteLink","click","prop","comment_id","remove"],"sources":["js/home_post_comments.js"],"mappings":"AAMA,MAAMA,aAEF,WAAAC,CAAYC,GACRC,KAAKD,OAASA,EACdC,KAAKC,cAAgBC,EAAE,SAASH,KAChCC,KAAKG,eAAiBD,EAAE,SAASH,mBAEjCC,KAAKI,cAAcL,GAEnB,IAAIM,EAAOL,KAEXE,EAAE,0BAA2BF,KAAKC,eAAeK,MAAK,WAClDD,EAAKE,cAAcL,EAAEF,MACzB,GACJ,CAGA,aAAAI,CAAcL,GACV,IAAIS,EAAQR,KACZA,KAAKG,eAAeM,QAAO,SAASC,GAChCA,EAAEC,iBAGFT,EAAEU,KAAK,CACHC,KAAM,OACNC,IAAK,mBACLC,KAAMb,EALCF,MAKOgB,YACdC,QAAS,SAASF,GACd,IAAIG,EAAaV,EAAMW,cAAcJ,EAAKA,KAAKK,SAC/ClB,EAAE,kBAAkBH,KAAUsB,QAAQH,GACtCV,EAAMD,cAAcL,EAAE,0BAA2BgB,IACjD,IAAII,WAAWpB,EAAE,uBAAwBgB,IACzC,IAAIK,KAAK,CACLC,MAAO,QACPC,KAAM,qBACNZ,KAAM,UACNa,OAAQ,WACRC,QAAS,OAEVC,MAEP,EAAGC,MAAO,SAASA,GACfC,QAAQC,IAAIF,EAAMG,aACtB,GAIR,GACJ,CAGA,aAAAb,CAAcC,GAEV,OAAOlB,EAAE,mBAAmBkB,EAAQa,mMAI+Cb,EAAQa,gNAInBb,EAAQc,MAAMC,mCAAmCf,EAAQa,mGAC3Db,EAAQc,MAAMC,oLAK9Df,EAAQgB,mHAGJhB,EAAQiB,KAAKC,wGAK3C,CAGA,aAAA/B,CAAcgC,GACVrC,EAAEqC,GAAYC,OAAM,SAAS9B,GACzBA,EAAEC,iBAEFT,EAAEU,KAAK,CACHC,KAAM,MACNC,IAAKZ,EAAEqC,GAAYE,KAAK,QACxBxB,QAAS,SAASF,GACdb,EAAE,YAAYa,EAAKA,KAAK2B,cAAcC,SAEtC,IAAIpB,KAAK,CACLC,MAAO,QACPC,KAAM,kBACNZ,KAAM,UACNa,OAAQ,WACRC,QAAS,OAEVC,MACP,EAAEC,MAAO,SAASA,GACdC,QAAQC,IAAIF,EAAMG,aACtB,GAGR,GACJ","ignoreList":[],"sourcesContent":["// Let's implement this via classes\r\n\r\n// this class would be initialized for every post on the page\r\n// 1. When the page loads\r\n// 2. Creation of every post dynamically via AJAX\r\n\r\nclass PostComments{\r\n    // constructor is used to initialize the instance of the class whenever a new instance is created\r\n    constructor(postId){\r\n        this.postId = postId;\r\n        this.postContainer = $(`#post-${postId}`);\r\n        this.newCommentForm = $(`#post-${postId}-comments-form`);\r\n\r\n        this.createComment(postId);\r\n\r\n        let self = this;\r\n        // call for all the existing comments\r\n        $(' .delete-comment-button', this.postContainer).each(function(){\r\n            self.deleteComment($(this));\r\n        });\r\n    }\r\n\r\n\r\n    createComment(postId){\r\n        let pSelf = this;\r\n        this.newCommentForm.submit(function(e){\r\n            e.preventDefault();\r\n            let self = this;\r\n\r\n            $.ajax({\r\n                type: 'post',\r\n                url: '/comments/create',\r\n                data: $(self).serialize(),\r\n                success: function(data){\r\n                    let newComment = pSelf.newCommentDom(data.data.comment);\r\n                    $(`#post-comments-${postId}`).prepend(newComment);\r\n                    pSelf.deleteComment($(' .delete-comment-button', newComment));\r\n                    new ToggleLike($(\" .toggle-like-button\", newComment));\r\n                    new Noty({\r\n                        theme: 'relax',\r\n                        text: \"Comment published!\",\r\n                        type: 'success',\r\n                        layout: 'topRight',\r\n                        timeout: 1500\r\n                        \r\n                    }).show();\r\n\r\n                }, error: function(error){\r\n                    console.log(error.responseText);\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n    newCommentDom(comment){\r\n        // I've added a class 'delete-comment-button' to the delete comment link and also id to the comment's li\r\n        return $(`<li id=\"comment-${comment._id}\">\r\n                        <p>\r\n                            \r\n                            <small>\r\n                                <a class=\"delete-comment-button\" href=\"/comments/destroy/${comment._id}\">delete</a>\r\n                            </small>\r\n                             <small>\r\n                                \r\n                                    <a class=\"toggle-like-button\" data-likes=\"${comment.likes.length}\" href=\"/likes/toggle/?id=${comment._id}&type=Comment\">\r\n                                        <i class=\"fa-regular fa-heart\"></i> ${comment.likes.length} \r\n                                    </a>\r\n                            \r\n                            </small>\r\n                            \r\n                            ${comment.content}\r\n                            <br>\r\n                            <small>\r\n                                ${comment.user.name}\r\n                            </small>\r\n                        </p>    \r\n\r\n                </li>`);\r\n    }\r\n\r\n\r\n    deleteComment(deleteLink){\r\n        $(deleteLink).click(function(e){\r\n            e.preventDefault();\r\n\r\n            $.ajax({\r\n                type: 'get',\r\n                url: $(deleteLink).prop('href'),\r\n                success: function(data){\r\n                    $(`#comment-${data.data.comment_id}`).remove();\r\n\r\n                    new Noty({\r\n                        theme: 'relax',\r\n                        text: \"Comment Deleted\",\r\n                        type: 'success',\r\n                        layout: 'topRight',\r\n                        timeout: 1500\r\n                        \r\n                    }).show();\r\n                },error: function(error){\r\n                    console.log(error.responseText);\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n}"]}